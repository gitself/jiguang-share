{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/jiguang-share/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;IAwB5C,0BAAiB;;;;IAE7C;;;;;;;;;;;;;;;;;;;;;;;;OAwBG;;;;;;;;;;;;;;;;;;;;;;;;;;IACH,qBAAI;;;;;;;;;;;;;;;;;;;;;;;;;IAAJ,UAAK,cAA8B;QACjC,MAAM,CAAC;KACR;IAED;;;OAGG;;;;;IAEH,6BAAY;;;;cAAC,IAAa;QACxB,MAAM,CAAC;KACR;IAED;;OAEG;;;;IAEH,gCAAe;;;;QACb,MAAM,CAAC;KACR;IAED;;;;;;SAMK;;;;;;;;IAEL,8BAAa;;;;;;;cAAC,IAAY;QACxB,MAAM,CAAC;KACR;IAED;;;;;;SAMK;;;;;;;;IAEL,mCAAkB;;;;;;;cAAC,IAAY;QAC7B,MAAM,CAAC;KACR;IAED;;;;;;QAMI;;;;;;;;IAEJ,0BAAS;;;;;;;cAAC,IAAY;QACpB,MAAM,CAAC;KACR;IAED;;;;;;QAMI;;;;;;;;IAEJ,4BAAW;;;;;;;cAAC,IAAY;QACtB,MAAM,CAAC;KACR;IAED;;;;;;SAMK;;;;;;;;IAEL,gCAAe;;;;;;;cAAC,IAAY;QAC1B,MAAM,CAAC;KACR;IAED;;;;;;QAMI;;;;;;;;IAEJ,4BAAW;;;;;;;cAAC,IAAY;QACpB,MAAM,CAAC;KACV;;gBAvHA,UAAU;;;QAoCV,OAAO,EAAE;;;;8CAGT;;QAKA,OAAO,EAAE;;;;iDAGT;;QASA,OAAO,EAAE;;;;+CAGT;;QASA,OAAO,EAAE;;;;oDAGT;;QASA,OAAO,EAAE;;;;2CAGT;;QASA,OAAO,EAAE;;;;6CAGT;;QASA,OAAO,EAAE;;;;iDAGT;;QASA,OAAO,EAAE;;;;6CAGT;;;;;;;;;;;;;IAtHY,MAAM;QAVlB,MAAM,CAAC;YACN,UAAU,EAAE,QAAQ;YACpB,MAAM,EAAE,uBAAuB;YAC/B,SAAS,EAAE,gBAAgB;YAC3B,IAAI,EAAE,sDAAsD;YAC5D,OAAO,EAAE,gFAAgF;YACzF,gBAAgB,EAAE,CAAC,SAAS,CAAC;YAC7B,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,MAAM,EAwHlB;iBAjJD;EAyB4B,iBAAiB;SAAhC,MAAM","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * @name jiguang-jshare\n * @description typescript warpper for cordova plugin cordova-plugin-jshare\n *\n * @usage\n * ```typescript\n * import { JShare } from '@ionic-native/cordova-plugin-jshare';\n *\n *\n * constructor(private jshare: JShare) { }\n *\n */\n@Plugin({\n  pluginName: 'JShare',\n  plugin: 'cordova-plugin-jshare',\n  pluginRef: 'plugins.JShare',\n  repo: 'https://github.com/gitself/cordova-plugin-jshare.git',\n  install: 'ionic cordova plugin add cordova-plugin-jshare --variable APP_KEY=your_app_key',\n  installVariables: ['APP_KEY'],\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class JShare extends IonicNativePlugin {\n\n/**\n * init JShare Sdk and config platform\n * \n * 设置微信平台信息。\n *  参数说明\n *  appId 微信平台appId\n *  appSecret 微信平台appSecret\n *\n * 设置qq平台信息。\n *  参数说明\n *  appId qq平台appId\n *  appKey qq平台appKey\n\n * 设置微博平台信息。\n *  参数说明\n *  appKey 微博平台appKey\n *  appSecret 微博平台appSecret\n *  redirectUrl 新浪微博平台的回调url \n * @param\n * {\n * Wechat:{ 'appId': string, 'appSecret':string }\n * SinaWeibo:{ 'appKey': string, 'appSecret':string,'redirectUrl':string }\n * QQ:{ 'appId': string, 'appKey':string }\n * }\n */\ninit(platformConfig: PlatformConfig): Promise<any> {\n  return;\n}\n\n/**\n * 在JShare Sdk init()初始化之前调用\n * \n */\n@Cordova()\nsetDebugMode(mode: boolean): void {\n  return;\n}\n\n/**\n * 获取已经正确配置的平台\n */\n@Cordova()\ngetPlatformList(): Promise<string[]> {\n  return;\n}\n\n/**\n * 判断某个平台是否有效\n * @param name 平台名称，值可选 \n * \"Wechat\"、\n * \"SinaWeibo\"、\n * \"QQ\"\n * */\n@Cordova()\nisClientValid(name: string): Promise<boolean> {\n  return;\n}\n\n/**\n * 判断某个平台是否支持授权\n * @param name 平台名称，值可选 \n * \"Wechat\"、\n * \"SinaWeibo\"、\n * \"QQ\"\n * */\n@Cordova()\nisSupportAuthorize(name: string): Promise<boolean> {\n  return;\n}\n\n/**\n * 授权\n * @param name 平台名称，值可选 \n * \"Wechat\"、\n * \"SinaWeibo\"、\n * \"QQ\"\n **/\n@Cordova()\nauthorize(name: string): Promise<PlatformAuthInfo> {\n  return;\n}\n\n/**\n * 判断某个平台是否已经授权\n * @param name 平台名称，值可选 \n * \"Wechat\"、\n * \"SinaWeibo\"、\n * \"QQ\"\n **/\n@Cordova()\nisAuthorize(name: string): Promise<boolean> {\n  return;\n}\n\n/**\n * 移除某个平台授权信息\n * @param name 平台名称，值可选 \n * \"Wechat\"、\n * \"SinaWeibo\"、\n * \"QQ\"\n * */\n@Cordova()\nremoveAuthorize(name: string): Promise<any> {\n  return;\n}\n\n/**\n * 获取某个平台个人信息\n * @param name 平台名称，值可选 \n * \"Wechat\"、\n * \"SinaWeibo\"、\n * \"QQ\"\n **/\n@Cordova()\ngetUserInfo(name: string): Promise<PlatformUserInfo> {\n    return;\n}\n\n}\n\nexport interface PlatformConfig {\n  Wechat?: { appId: string, appSecret: string};\n  SinaWeibo?: { appKey: string, appSecret: string, redirectUrl: string};\n  QQ?: { appId: string, appKey: string };\n}\n\nexport interface PlatformAuthInfo {\n  token: string;\n  expiration: number; // token有效时间，时间戳\n  refresh_token: string;\n  openid: string;\n  originData: string; // 授权原始数据\n}\nexport interface PlatformUserInfo {\n  openid: string;\n  name: string; // 用户昵称\n  imageUrl: string; // 头像url\n  gender: number; // 性别, 1表示男性；2表示女性\n  originData: string; // 用户信息原始数据\n}\n"]}